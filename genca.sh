#!/bin/sh

# 
# https://superuser.com/a/1590560
#

hostname=$(hostname)

basedir=~/certs
certdirname="root_ca"
targetdir=$basedir/$certdirname

mkdir -p $targetdir
cd $basedir

if [ ! -f $certdirname/index ]
then
    touch $certdirname/index
fi

if [ ! -f $certdirname/serial ]
then
    echo "00" > $certdirname/serial
fi

if [ -f $certdirname/ca.ext ]
then
    echo "Found $certdirname/ca.ext"
else
    echo "[ default ]
    basicConstraints = critical,CA:true     # recommended to be marked critical. required for a ca
    keyUsage         = critical,cRLSign,keyCertSign # required to be marked critical. required for signing certs
    " > $certdirname/ca.ext
fi

if [ -f root.config ]
then
    echo "Found root.config"
else
    echo "[ ca ]
    default_ca      = CA_default

    [ CA_default]
    dir             = ./root_ca           # helper variable pointing to ca specific files
    database        = \$dir/index         # database of certs generated by the ca
    new_certs_dir   = ./                  # one dir up to make the demo easier
    certificate     = \$dir/certificate.crt      # one dir up to make the demo easier
    serial          = \$dir/serial        # file with incrementing hex serial number for certs
    private_key     = \$dir/private.key

    policy          = policy_any
    email_in_dn     = no             # recommended
    unique_subject  = no             # recommended for easier certificate rollover
    copy_extensions = copy           # don't honor the extensions in the csr
    default_md      = sha256

    [ policy_any ]
    countryName            = optional
    stateOrProvinceName    = optional
    organizationName       = optional
    organizationalUnitName = optional
    commonName             = supplied
    " > root.config
fi

if [ -f $certdirname/cert_req.config ]
then
    echo "Found $certdirname/cert_req.config"
else
    echo "[ req ]
    distinguished_name = req_distinguished_name
    prompt             = no

    [ req_distinguished_name ]
    countryName = PK
    commonName  = $hostname Root
    " > $certdirname/cert_req.config
fi

# create the private key for the root CA
openssl genrsa \
    -out $certdirname/private.key \
    2048            

# create the csr for the root CA
openssl req \
    -new \
    -key $certdirname/private.key \
    -out $certdirname/cert_req.csr \
    -config $certdirname/cert_req.config 

# create the root CA cert
openssl ca \
    -in $certdirname/cert_req.csr \
    -out $certdirname/certificate.crt \
    -config root.config \
    -selfsign \
    -extfile $certdirname/ca.ext \
    -days 1095

cp $certdirname/certificate.crt root.crt